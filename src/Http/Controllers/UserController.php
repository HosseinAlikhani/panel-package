<?php

namespace D3CR33\Panel\Http\Controllers;

use D3CR33\Auth\Base\Model\User;
use D3CR33\Panel\Base\BaseEntity;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Validator;

/**
 * Class UserController
 * @package D3CR33\Panel\Http\Controllers
 */
class UserController extends BaseEntity
{
    /**
     * UserController constructor.
     *
     * @param  User  $user
     */
    public function __construct(User $user, Request $request)
    {
        $this->model   = $user;
        $this->request = $request;
    }

    /**
     * return show user view
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\View\View
     */
    public function getUsers()
    {
        $users = $this->users();

        return view('Panel::user.list', compact(['users']));
    }

    public function getUser($id)
    {
        $user = $this->findOne($id);

        return view('Panel::user.update', compact(['user']));
    }

    public function postUser($id)
    {
        if ($this->validator()->fails()) {
            return response($this->validator()->errors()->first(), 422);
        }

        return $this->update($id) ?
            response(__('Panel-Lang::trans.message.updateok'), 200) :
            response(__('Panel-Lang::trans.message.updateno'), 500);
    }

    public function deleteUser($id)
    {
        return $this->delete($id) ?
            response(__('Panel-Lang::trans.message.deleteok'), 200) :
            response(__('Panel-Lang::trans.message.deleteno'), 500);
    }

    /**
     * return all users
     * @return mixed
     */
    public function users()
    {
        return $this->findAll();
    }


    public function user()
    {

    }

    /**
     * create new user
     *
     * @param $param
     *
     * @return mixed
     */
    public function create($param)
    {
        return parent::create($param); // TODO: Change the autogenerated stub
    }

    /**
     * update user param
     *
     * @param $id
     * @param $param
     *
     * @return mixed
     */
    public function update($id, $param = null)
    {
        return parent::update($id, $this->variable($this->request->all())); // TODO: Change the autogenerated stub
    }

    /**
     * @return array
     */
    public function variable()
    {
        return [
            'fname' => $this->request->fname,
            'lname' => $this->request->lname,
            'email' => $this->request->email
        ];
    }

    /**
     * @return \Illuminate\Contracts\Validation\Validator
     */
    public function validator()
    {
        foreach (array_keys($this->variable()) as $key) {
            $rule[$key] = 'required';
        }

        return Validator::make($this->request->all(), $rule, $this->message());
    }

    /**
     * @return array
     */
    public function message()
    {
        return [
            'required' => __('Auth-Lang::validation.required'),
        ];
    }
}
